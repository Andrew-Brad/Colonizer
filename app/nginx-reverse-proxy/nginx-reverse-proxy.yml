version: '3.8'
services:
  # Nginx Proxy Manager service
  rpm:
    image: 'jc21/nginx-proxy-manager:github-pr-3331'
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
    ports:
      - "80:80" # HTTP 
      - "82:81" # Nginx Proxy Manager web interface
      - "443:443" # HTTPS
    environment:  # Add these lines for MySQL connection
      DB_MYSQL_HOST: rpm_db  # Replace 'rpm_db' with the MySQL service name
      DB_MYSQL_USER: nginx_reverse_proxy_manager
      DB_MYSQL_PASSWORD__FILE: /run/secrets/mysql_password
      DB_MYSQL_NAME: nginx_reverse_proxy_manager
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    depends_on:
      - rpm_db
    volumes:
      - nginx_reverse_proxy_data:/data
      # lets encrypt directory intentionally excluded
      # SSL certificates, when managed by Nginx Proxy Manager, are stored within its internal database or configurations, not as separate files in the container filesystem.
      # This setup ensures persistence and ease of management within the Nginx Proxy Manager tool.
    secrets:
      - mysql_password

    # Configure service networks
    networks:
      - nginx_proxy_manager_network

    # Define health checks
    # healthcheck:
    #  test: ["CMD", "curl", "-f", "http://localhost/"]

  # service for Nginx Proxy Manager backend
  rpm_db:
    image: mariadb:lts-jammy
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 10
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: nginx_reverse_proxy_manager
      MYSQL_USER: nginx_reverse_proxy_manager
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    volumes:
      - mysql_nginx_data:/var/lib/mysql

    # Configure service networks
    networks:
      - nginx_proxy_manager_network

    # Define secrets for MySQL passwords
    secrets:
      - mysql_root_password
      - mysql_password

  # Lightweight site for diagnosis and troubleshooting
  smoke_test_website:
    image: httpd:alpine
    # uncomment these if you want to be able to browse to x.x.x.x:1234 to test from outside the docker network
    # ports:
    #  - "1234:80"
    deploy:
      replicas: 0  # Initial replicas set to 0, can bump these up temporarily for smoke testing
    networks:
      - nginx_proxy_manager_network

# Note about networks
# In order for RPM to proxy to those services, they need to be on the same network
# When containers are connected within the same network, Docker provides built-in DNS resolution to allow these
# containers to communicate with each other using their container names. (--name foocontainer)
networks:
  nginx_proxy_manager_network:
    name: nginx_proxy_manager_network

volumes:
  nginx_reverse_proxy_data:
    name: nginx_reverse_proxy_data
    labels:
      andrews-homelab: "back_me_up"
  mysql_nginx_data:
    name: mysql_nginx_data
    labels:
      andrews-homelab: "back_me_up"

secrets:
  mysql_root_password:
    external: true
  mysql_password:
    external: true
